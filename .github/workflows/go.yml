name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  cross-platform-build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-amd64, windows-amd64]
    env:
      GOOS: ${{ matrix.platform.split('-')[0] }}
      GOARCH: ${{ matrix.platform.split('-')[1] }}
      CGO_ENABLED: 0

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Go Toolchain
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.x'
        check-latest: true

    - name: Run Unit Tests
      run: go test -v -coverprofile=coverage.out ./...

    - name: Build Optimized Binary
      run: |
        OUTPUT="envctl-${{ env.GOOS }}-${{ env.GOARCH }}${{ contains(matrix.platform, 'windows') && '.exe' || '' }}"
        go build \
          -trimpath \
          -ldflags="-s -w -X main.buildVersion=$(git describe --tags --always)" \
          -o bin/$OUTPUT ./cmd/envctl

    - name: Generate Checksums
      run: |
        cd bin
        sha256sum * > checksums.txt

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: envctl-${{ matrix.platform }}-binaries
        path: |
          bin/*
          !bin/coverage*
        retention-days: 7

  publish-release:
    name: Publish Release
    needs: cross-platform-build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts
        pattern: envctl-*-binaries
        merge-multiple: true

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: "EnvCTL ${{ github.ref_name }}"
        body: |
          ## Release Details
          ðŸ”– **Version**: ${{ github.ref_name }}
          ðŸš€ **Commit**: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          ðŸ“… **Build Date**: ${{ steps.date.outputs.date }}

          ### Verification
          ```bash
          sha256sum -c checksums.txt
          ```
        tag_name: ${{ github.ref_name }}
        files: |
          release-artifacts/**/*
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set Current Date
      id: date
      run: echo "date=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
