name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64]
        include:
          - goos: linux
            ext: ""
          - goos: windows
            ext: ".exe"
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.x'
        check-latest: true

    - name: Test
      run: go test -v ./...

    - name: Build
      run: |
        OUTPUT="envctl-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}"
        go build -ldflags="-s -w" -trimpath -o bin/$OUTPUT ./cmd/envctl
        echo "BUILD_VERSION=$(git describe --tags --always)" >> $GITHUB_ENV

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: envctl-binaries
        path: bin/
        retention-days: 3

  release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: envctl-binaries
        path: release-binaries

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-binaries/*
        body: |
          ### Build Details
          - **Version**: ${{ env.BUILD_VERSION }}
          - **Commit**: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          - **Build Date**: ${{ steps.prep.outputs.date }}
        tag_name: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
